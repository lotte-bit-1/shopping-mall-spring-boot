<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bit.shoppingmall.app.mapper.CategoryMapper">
    <resultMap id="BaseResultMap" type="category">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="name" property="name"/>
        <result column="level" property="level"/>
    </resultMap>

    <resultMap id="CategorySearch" type="com.bit.shoppingmall.app.dto.product.ProductListItem">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="BIGINT" property="price"/>
        <result column="is_liked" jdbcType="BOOLEAN" property="isLiked"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
    </resultMap>
    <resultMap id="hierarchy" type="com.bit.shoppingmall.app.dto.category.response.CategoryHierarchy">
        <result column="name1" jdbcType="VARCHAR" property="name1"/>
        <result column="name2" jdbcType="VARCHAR" property="name2"/>
        <result column="name3" jdbcType="VARCHAR" property="name3"/>
        <result column="high" jdbcType="VARCHAR" property="high"/>
        <result column="middle" jdbcType="VARCHAR" property="middle"/>
        <result column="low" jdbcType="VARCHAR" property="low"/>
    </resultMap>

    <select id="select" parameterType="Long" resultType="category">
        SELECT *
        FROM category
        WHERE id = #{id}
    </select>
    <select id="selectAll" resultMap="hierarchy">
        select null pp_id, null pp_name, null p_id, null p_name, c.id id, c.name name, c.level level
        from category c
        where level = 1
        union
        select null pp_id,
        null pp_name,
        c1.id p_id,
        c1.name p_name,
        c2.id id,
        c2.name name,
        c2.level level
        from category c1
        left join category c2
        on c1.id = c2.parent_id
        where c2.level = 2
        union
        select c1.id pp_id,
        c1.name pp_name,
        c2.id p_id,
        c2.name p_name,
        c3.id id,
        c3.name name,
        c3.level level
        from category c1
        left join category c2 on c1.id = c2.parent_id
        left join category c3 on c2.id = c3.parent_id
        where c3.level = 3;
    </select>
    <insert id="insert" parameterType="category" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO category (parent_id, name, level)
        VALUES (#{parentId}, #{name}, #{level})
    </insert>
    <update id="update" parameterType="category">
        UPDATE category
        SET name = #{name},
        level = #{level}
        WHERE id = #{id}
    </update>
    <delete id="delete" parameterType="Long">
      DELETE
      FROM category
      WHERE id = #{id}
    </delete>
    <select id="firstCategory" resultType="category">
        SELECT *
        FROM category
        WHERE level = 1
    </select>

    <select id="searchProductByCategory" parameterType="hashMap" resultMap="CategorySearch">
        select p.name name,
        p.price price,
        pi.url url,
        p.id id,
        CASE
        WHEN l.product_id IS NOT NULL THEN true
        ELSE false END AS is_Liked
        from category c
        left join product p on c.id = p.category_id
        left join product_image pi on p.id = pi.product_id
        LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{memberId}
        where level = 1
        and pi.is_thumbnail = true
        and c.name LIKE '%' || #{keyword} || '%'
        UNION
        select p.name name,
        p.price price,
        pi.url url,
        p.id id,
        CASE
        WHEN l.product_id IS NOT NULL THEN true
        ELSE false END AS is_liked
        from category c
        left join product p on c.id = p.category_id
        left join product_image pi on p.id = pi.product_id
        LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{memberId}
        where level = 2
        and pi.is_thumbnail = true
        and c.name LIKE '%' || #{keyword} || '%'
        UNION
        select p.name name,
        p.price price,
        pi.url url,
        p.id id,
        CASE
        WHEN l.product_id IS NOT NULL THEN true
        ELSE false END AS is_Liked
        from category c
        left join product p on c.id = p.category_id
        left join product_image pi on p.id = pi.product_id
        LEFT JOIN likes l ON l.product_id = p.id AND l.member_id = #{memberId}
        where level = 3
        and pi.is_thumbnail = true
        and c.name LIKE CONCAT('%', #{keyword}, '%')
        limit #{curPage}
        , 9
    </select>

    <select id="selectSubcategory" parameterType="String" resultType="com.bit.shoppingmall.app.dto.category.response.SubCategory">
        select c1.id low, c2.id middle, c3.id high
        from category c1
        left join category c2 on c1.id = c2.parent_id
        left join category c3 on c2.id = c3.parent_id
        where c1.name = #{keyword}
    </select>
    <select id="selectAllCategory" resultType="category">
      select *
      from category
    </select>
</mapper>






